# name: Deploy to Staging

# on:
#   push:
#     branches: [main]
#     # 移除路径限制，确保任何推送到main都会触发

# jobs:
#   deploy-stage:
#     runs-on: ubuntu-latest
#     container:
#       image: databricksfieldeng/mlopsstacks:latest
#     environment: stage
#     env:
#       DATABRICKS_HOST: "${DATABRICKS_HOST}"
#       DATABRICKS_TOKEN: "${DATABRICKS_TOKEN}"
#       DOCKER_AUTH_CONFIG: "${DOCKER_AUTH_CONFIG}"
#     steps:
#       - uses: actions/checkout@v4
#       - name: Deploy to Staging
#         run: |
#           cd my_mlops_project
#           databricks bundle validate -t staging
#           databricks bundle deploy -t staging
#         timeout-minutes: 30
name: Deploy to Staging

on:
  push:
    branches: [main]

jobs:
  deploy-stage:
    runs-on: ubuntu-latest
    environment: stage
    env:
      # 使用 vars 上下文来引用环境级别的变量
      DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ vars.DATABRICKS_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 在认证后的容器中运行命令
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/my_mlops_project:/workspace \
            -e DATABRICKS_HOST \
            -e DATABRICKS_TOKEN \
            databricksfieldeng/mlopsstacks:latest \
            bash -c "cd /workspace && databricks bundle validate -t staging && databricks bundle deploy -t staging"
        timeout-minutes: 30