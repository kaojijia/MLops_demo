# name: Deploy to Staging

# on:
#   push:
#     branches: [main]
#     # 移除路径限制，确保任何推送到main都会触发

# jobs:
#   deploy-stage:
#     runs-on: ubuntu-latest
#     container:
#       image: databricksfieldeng/mlopsstacks:latest
#     environment: stage
#     env:
#       DATABRICKS_HOST: "${DATABRICKS_HOST}"
#       DATABRICKS_TOKEN: "${DATABRICKS_TOKEN}"
#       DOCKER_AUTH_CONFIG: "${DOCKER_AUTH_CONFIG}"
#     steps:
#       - uses: actions/checkout@v4
#       - name: Deploy to Staging
#         run: |
#           cd my_mlops_project
#           databricks bundle validate -t staging
#           databricks bundle deploy -t staging
#         timeout-minutes: 30
name: Deploy to Staging

on:
  push:
    branches: [main]

jobs:
  deploy-stage:
    runs-on: ubuntu-latest
    environment: stage
    env:
      DATABRICKS_HOST: "${DATABRICKS_HOST}"
      DATABRICKS_TOKEN: "${DATABRICKS_TOKEN}"
    steps:
      - name: Docker 登录
        run: |
          echo '${DOCKER_AUTH_CONFIG}' > ~/.docker/config.json
      - uses: actions/checkout@v4
      - name: 在认证后的容器中运行命令
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/my_mlops_project:/workspace \
            -e DATABRICKS_HOST="${DATABRICKS_HOST}" \
            -e DATABRICKS_TOKEN="${DATABRICKS_TOKEN}" \
            databricksfieldeng/mlopsstacks:latest \
            bash -c "cd /workspace && databricks bundle validate -t staging && databricks bundle deploy -t staging"
        timeout-minutes: 30